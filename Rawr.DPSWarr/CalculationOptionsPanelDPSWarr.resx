<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="RTB_Version.Text" xml:space="preserve">
    <value>Below are the raw patch notes for each build.

v2.2.20 (Unreleased)

- Fury warriors can now only equip polearms in the mainhand, and only if there is no offhand equipped
- Fixed a bug where not having Commanding Presence, Maintaining Battle Shout, and having Battle Shout/BoMight would give you both buff effects
- Maintaining buffs will no longer disable their corresponding buff checkboxes; those buffs will now just not contribute to your stats. You no longer need to re-set your BoMight after un-checking Battle Shout from the maintenance tab
- Fixed a bug in where buff/debuff maintenances that can not miss (ie battle shout, enraged regeneration) were capable of missing.
- Deathwish and Recklessness will now use up GCDs
- Fixed a bug where we were double-dipping in AvoidanceStreaks when calculating Bloodsurge procs.
- Hit will no longer randomly jump above strength when changing buffs or maintenance abilities (fixed from the double-dip and enraged-regen-miss bugs listed above). If you still see this occur, please open an Issue and attach your character file.
- PTR Mode is now disabled and anything requiring it is now set as standard instead of the option
- Updated the ArP tooltip to the new caps and added T9 breakout into that
- White-space reformatting in some areas (no calc changes)
- Fix for issue 14264, older char files not able to load in new version due to abil tree failing to populate before a separate thread is launched that needs it pop'd
- Fixed a bug with Cleave DPS
- Updated to match new BossHandler methods
- Added Draenei Heroic Presence Buff enforcement if player is a Draenei, removed other conflicts with this method
- More bug-fix crunchin an' munchin'
- Framework for having Unbuffed/Buffed/Max Stats (not in tooltips yet)
- Special Effects now iterate over Crit/Haste/Hit bonuses until settled, then move on to non-Crit/Haste/Hit bonuses
- Mongoose and Executioner now properly trigger only from their weapon, and not all hits on one weapon
- Whirlwind will no longer be calculated as Glance-able
- Fixed the Hit "Relative Stat Values" bug once and for all (was related to flooring the stats given by On-Hit effects like Berserking)
- Added Rage Gains from Damage Taken
- Added Boxes to Options Pane to control Damage Taken: Freq (in seconds, default every 20 sec) and Unmitigated Damage (default 5000)
- These come together to increase total rage generated over duration from Boss AoE attacks. Next step is to include damage types for damage reduction from Armor, Resists, etc and handling if that AoE is dodge-able, etc.
- These Damage Taken variables are not tied to BossHandler yet so they are set independently for the time being
- Added Movement abilities (Charge from Juggernaught only for now). Value is now given to Juggernaught, Improved Charge, Glyph of Charge and (if movement freq is high enough) Glyph of Rapid Charge
- This recovers a set amount of time (based on movement speed) when you have to move to keep up with a boss.
- Fixed a couple of Bugs with the other effects that get in the way of dealing damage (Stuns, etc.)
- Fixed a couple bugs that came up from last commit
- Added Fury Berserker Stance Damage taken penalty to Rage gen from damage taken
- Added Damage Taken Trigger handling in our SpecialEffects (Black Heart now gives us the armor, not that we really needed it though)
- Stupid new files not auto-adding themselves
- Rearranged the Options pane some to make room for new stuff
- Separated Hide Bad Items to 3 separate boxes: Def, Spell, PvP
- Removed Intellect from Spell so Mail gear doesn't get removed inadvertently
Minor accuracy updates 
- Fix for ReactionTime/Latency (now Reaction will only be used when you need to react, ie procs or fear/root breaks).
- Modified the AvoidanceStreak calcs to use a Rage Slip instead (credit to Landsoul's arms sheet). Abilities that do not cost rage are not affected (ie Bloodrage, Berserker Rage)
- Reverted the fix-but-not-really-a-fix on Fury's Slam being absolved from AvoidanceStreak. In this new formula, it's affected just as everything else is.
- Fury warriors take note: Hit post-cap has lost a little bit of value in the new checkin.
- Updated Rend Calcs
- Added Damage Taken Multipliers to affect damage for Rage Gains
- Added Rage Gains from Blessing of Sanctuary
- Fixed a bug with Slam trying to eat GCDs when not being Maintained
- Fixed some relevancy stuff
- Added Incoming Dodge/Parry stuff for better DamageAvoided accuracy(but didn't add those as relevant)
- How did I miss this bulletin on Dodged White attacks?
- Rage gained from a dodged/parried attack is now that of a normal hit (rather from 0)
- Avoidance Streak calculations only look at white miss chance, not white dodge or parry
- Added intelligent proc handling for ArP; Mjolnir Runestone and Grim Toll are now handled more intelligently, averaging out your Damage Reduction from ArP rather than the rating from ArP
- Added "Max Armor Penetration" to the Armor Penetration tooltip, so you can track how close you are to the ArP cap
- Overhauled Sword Spec, new activates formula (to better sim the once every 6 sec), new attack table (to enforce glances), new tooltip (to show you the glances)
- Yellow attacks weren't using the 2-roll system after the optimizations we did a while back, but it wasn't obvious until the AvoidanceStreak re-tuning (thanks BrWarner)
- Deep Wounds was counting Heroic Strike/Cleaves twice. Oops.
- Added another minor fix to Sword Spec activates
- Incorporated Mortal Strike activation delays based on Landsoul's latest sheet
- Using new method for Sudden Death activates (similar to Sword Spec's new ones)
- Added intentional downtime to Rend
- Several parts of these changes put the Arms rotations noted activates closer to Landsoul's sheet for easier comparisons between the two. However, in order to set up like the spreadsheet, you have to turn off more than half the options available to Rawr and water it down to just a Patchwerk test. Total DPS variance for a BiS test was 3.2% (about 9k vs 9.2k)
- More Landsoul v Rawr work
- Moved Rend up in Priority
- Formulized more of the values used in MS Delays
- Improved the Performance of the new MS Delay (was causing heavy slowdowns, managed to reduce them some)
- Updated the Expertise tooltip on Stats Pane to show ratings caps against talents (nice grid for players that need to know it)
- Added Damage Taken Multiplier to Survivability, -10% damage (like Blessing of Sanc) increases Surv Value, +10% Damage decreases it
- Fixed the tooltips on the Options Pane, they now properly take their new character returns so they aren't just one line running off screen
- Added BossAttackPower as Relevant
- Added Demo Shout Handling for Maintenance vs Buffs to Prevent Double-Dipping
- Added BossAttackPower to Survivability (turns it into a dps incoming mod and adds that to Survivability, this gives value to Improved Demo Shout Talent)
- Added BossAttackPower modifier to the Rage Gained from Incoming Damage
- Fixed Demo Shout Duration's attachment to Booming Voice
- Added BossAttackSpeedMultiplier as relevant, store Thunder Clap value
- Added Thunder Clap logic to use ours instead of Buffs when being maintained
- Added BossAttackSpeedMultiplier to Survivability
- Added Sunder Armor Special Effect Based on Talents, etc
- Added Sunder Armor logic to use ours instead of Buffs when being maintained
- Fixed a bad relevant stat
- Turned on the "Use Duration for Special Effects". See below for description
- Fixed the rage gain from Blessing of Sanctuary; the calcs were a little wonky, and you were seeing rage gains from it whether you had the checkbox for AOE damage or not
- Description of "Use Duration for Special Effects" option: There are two ways we can get the stats from a special effect such as Flurry, Death Wish, or Bloodlust. One way (the way most spreadsheets use) is to average it out over time, so that regardless of how long the fight is, the buff is worth the same amount of DPS. Take Bloodlust as an example: 30% haste for 40secs, 10min CD. You can average that out to 2% haste (0.3*40/600), but on a 2min fight, you get much more haste out of it (0.3*40/120 = 10%, it's up 33% of the time). When "Use Duration for Special Effects" is checked, it will give you 10% for Bloodlust on a 120sec fight; if it's unchecked, it will give you 2%. Landsoul's sheet gives you 2%.
- Removed code that's still in development
- one final fix for BoSanc's 2-rage bonus on dodged/parried attacks. Should be correct now.
- Fixed an unreachable code warning
- Added Option to hide Enchants based on professions, E.g.- If you aren't an Engineer you won't see Hyperspeed Accelerators (this option is defaulted to off, users will need to activate it for the benefit)
- Added Taste for Blood separation from Overpower on Abil Maintenance Tree
- laid groundwork for a new comp chart for DPSWarr, but it wasn't working right so it will remain hidden until it does
- Fix for issue 14338, 14339

v2.2.19 (Unreleased)

v2.2.18 (Unreleased)

v2.2.17 (Sep 23, 2009 04:36)

- Fixed a bug with Overpower Activates
- Added Support for StunDurReduc items and Migrated Iron Will to use that stat
- Added new Relevancy method for Items/Enchants/Buffs, hides items that have reduced usefuless (items that have Spell stats and/or Tanking Stats). This is to make the comparison lists smaller and more relevant and make the Build Upgrade List run faster (since there's a smaller list of items to have to choose from. This setting can be turned on/off from the top of the Options Pane.
- Laid the visual groundwork for '&lt;20% Execute Spamming' (making it an option on Ability Maintenance tree, adding a line for DPS on the stats pane, adding back-end variables to store the DPS info)
- Added &lt;20% HP Execute Spam handling
- More refactoring to remove dependencies between Arms and Fury
- improved performance by removing superfluous DoIterations calls. Began implementing a smarter rotation (not being called, so don't worry, no functional changes)
- removed some old code (bloodsurge rps stuff). 
- Changed accessability on a lot of Skills methods/properties from public to protected (helps w/intellisense, and we should minimize our public methods in general)
- commented out the call to the new method that was just eating up cycles and doing nothing relevent yet. Whoops!
- Finishing the commit that was supposed to go in last night
- Moved Exec Spamming into the Proc Settler
- Fixed the total rage generated stat on the pane so it's properly visible
- Reworked the Rage usage system on Execute and Sudden Death
- Reworked the activates on Taste for Blood for a better value per point
- Redunculous overhaul to Execute Spamming in Arms, trying to get it under better logic and ensure that you see a DPS gain with it activated. Meh, 1 of 2 ain't bad...
- Partial Fix for issue 14169: T8 2P Set Bonus for DPSWarr overvalued. Added the chance to Proc instead of 100%, corrected it's activates interval.
- Partial fix for issue 14176, needed to check base.IsItemRelevent to hide items for other classes etc
- Fix to show Potion of Wild Magic as a relevant Buff
- Hid extraneous Set Bonus Buffs
- Added Fear and Root settings to the Options Pane, these work the same way the Stuns settings do
- Added Fear and Root handling to Arms
- Fixed an issue where some of the Boss Settings might not reload
- Added a LOT of tooltips to the Options pane so users can more easily know what each setting does
Special Rage Updates! 
- Added spell-miss changes for Demo/Thunderclap. Also added support for Misery in buffs
- Fixed a rage calc issue where it was using your hasted weapon speed as opposed to your unhasted weapon speed in the rage formula
- Fixed a rage calc where, when doing Heroic Strike/Cleave calculations, the rage cost of those abilities were effectively doubled. HS damage for Fury should be in line with actual performance (and landsoul's spreadsheet)
- Fixed the RageGen tooltips in the Fury model
- Moved a FreeRageOverDur from Rotation.base to Rotation.Fury, as it wasn't being used in Arms
- More tooltip corrections (White DPS tooltip now functions properly)
- Fixed T8 2pc set bonus for good this time
- Added new proc stats methodology that supports nested proc effects such as Victory's Call
- Added forced override for Nightmare Tear (and it's lesser counterparts) to be shown with Hide Bad Items enabled
- Updated the Options Pane to reflect recent changes in Rawr2
- Managed to attach some of the UI elements to functions (blend kept crashing on everything else). It now lets you select Fury vs Arms, which is the most important thing.
- Made the Under 20% HP Box on the options pane actually do something
- Tied the Under 20% HP handling to the box on the options pane
-  Fixed use of SpecialEffects (we were confusing using Frequency instead of Interval, and we were passing a critInterval with 100% chance, rather than hitInterval with crit% chance).  (Now, the Rampage talent gives &lt;5% crit as it should (and will open up the chance for LotP to be a slight dps increase; need to support that though). This will also allow us to use charged buffs like Sweeping Strikes, Recklessness, and Flurry, more accurately.)
- Slight perf/accuracy improvement by making sure we don't constantly recreate CombatFactors/WhiteAttacks objects
- Migrated Flurry over to the Special Effects system. Rampage is not a Special Effect for now due to performance reasons
- Berserking uptime is now much more accurate
- Fixed a bug in the White DPS tooltip where DPS didn't match the stats pane
- Fixed a bug causing the White Damage on Hit to be Zero for Arms in the stats pane (visual issue only)
- Fixed a Typo in the White DPS tooltip
- Fixed a bug with the new SpecialEffects method that was causing things to have a &gt;100% chance to proc (was throwing several calcs off, especially Victor's Call)
- Updated the Comparison Calcs statement to include Survivability

v2.2.16 (Sep 13, 2009 21:51)

- Added usage for BossHandler's filtered lists, can now filter by Content (T7, T9, etc), Instance (Naxx, EoE, etc), Version (10/25, etc) or by Boss Name.
- Added Saving/Recalling methods for Filtered lists and last boss selected
- Fixed NaN issue with arms with low stats (ie: no buffs). Fixed NaN issue when no weapon is equipped (which also affected the weapon lookup window when checking for upgrades)
- Fixed a number of bugs that led to offhand giving negative DPS
- Fix for issue 14106: Skills.Base.WhiteAttacks.OhActivates wasn't checking for attack speed of 0 (when no offhand was equipped). Also, removed "Which" logic in some places, as it was no longer being used
- Removed the reference to GlobalSuppression.cs from the project file.
- Fixed Landed attacks per second calcs used in SpecialEffects
- Reworked SweepingStrikes using a new method that more accurately consumes charges
- Added a new verification check that ensure if MultiTargs Percent is set to 0, it will act as if MultiTargs isn't checked (so for sure no DPS change for on @ 0% vs off)
- Updated the Default Gemming Templates, there's now 24 (4 groups of 6, Uncommon, Rare, Epic, Jeweler). Only the 6 from Epic are defaulted to active. Note to users: I had to delete my GemmingTemplates.xml file so Rawr could auto-recreate it.
- Corrected a couple abilities' validations
- Fixed the Landed Attacks thing (did one thing backwards
- Added caps to durations for Sweeping Strikes and Recklessness so they can't go overboard with taking too long to consume the activates
- Enhanced the FAQ box's readability by linking it to a dropdown so a user can select the question then read only that question and the answer.
- Fixed the cap on Max Targets to it won't null exception with the number it's recieving is too high


v2.2.15 (Sep 7, 2009 08:25)

- Partially applied a patch that updates talents to 3.2 (Rogue, Paladin and Warriors)
- Added a PTR Mode checkbox (currently activates 3.2.2 changes for SwordSpec) (added variable to Rawr3 so it can compile)
- Increased the loop limit on proc settling for Arms
- Working on Stun handling
- Working on Stun handling
- More work on Stun handling
- Reworked Multi-Targs and it's relation to Heroic Strike and Cleave. Now settles Cleaves used vs Heroic Strike with Multiple Targets Percent for Arms (Fury still needs to adopt this)
- Added Heroic Strike and Cleave to Verbose Tooltip
- Fixed the issue with Available Rage being shown on the panel as negative.
- Added Survivability Calcs: This is Health / 100 + Heals Per Sec (HPS) that comes from self abilities (Second Wind, Enraged Regen, etc.). You can scale the effect using the Options Panel (set to 0 to ignore Survivability).
- Made Changes to Fury Iter to settle Cleave in with HS and Bloodsurge. This was to fix a performance issue and Ebs needs to review
- Fixed the bug that makes the Titan's Grip talent show massive negative DPS. Needed to add a lot more checks for OH stuff to require TG.
- Added Enraged Regeneration to Ability Maintenance Tree.
- Fixed Jothay's attempt to put multipletargets in fury :P Multiple Targets should now work properly in both arms and fury.
- Oops, forgot to save a file :x
- Added better logic to Enchant Fits in Slot checks for MH/OH
- Changed the defaults for the Options panel to 100% in back, multitargs off and stunning off
- Sweeping Strikes wasn't playing nice with my changes earlier
- Fully removed the Trinket GCD system
- Changed Sweeping Strike's chance to new attack table
- Added Paragon support (Death's Verdict/Choice)
- Fixed Rampage Talent Handling
- Changed Trinket and other SpecialEffects trigger intervals to operate more on actual ability usage numbers
- Reworked Ability Proc'g to operate more on actual ability usage numbers
- Added Rage Gains from Sword Spec hits
- Added Rage Slip effect to a couple of abilities that weren't using it
- Adjusted Dual Wield Specialization Bonus application
- Remodeled the following abilities to operate as SpecialEffects: Flurry, Wrecking Crew, Rampage, Trauma. This increases their accuracy for bonus over uptime.
- Split handling of Cleave and Heroic Strike numbers where they were previously combined.
- Pushed a series of code changes to make more items act in relation to Duration of Fight verse Per Sec to simplify math
- Fix Bonus Targets for White Damage
- Modeled Bloodrage's Health usage and Glyph to negate it
- Removed some code that had become outdated
- Removed some bugged requirements for Second Wind
- Moved some of the extra SpecialEffects around to try and improve performance and accuracy.
- Broke T8 2P set bonus (working on a solution)
- Added OnAttack Abilities to Landed Attacks per sec (since they have different tables than white attacks)
- Simplified a lot of the rage calcs
- Reverted Flurry Change
- Found the bug in T8 2P for Arms, fixed
- Created FuryRotation and ArmsRotation as a subclass of Rotation, pulled all the fury/arms specific rotation logic into these files. Broke down Skills.cs to different partial classes to make it easier to navigate and see changes. I've tested both arms and fury for right now
- Fixed Ebs's commit (one of the files was conflicting on his attempt to commit)
- Fixed a bug with displayed information which occurred after rotation refactoring
- Fixed a bug with Bladestorm which occurred after rotation refactoring
- Simplified usage of use OH checks
- Added MovementSpeed as a relevant stat
- Fixed a slight bug with the new useOH method
- Enabled Moving Targets, change the box from a Percentage to a Number of Seconds. This box is clipped by Duration (can't set a higher value than what Duration is at). Making the necessary code for Arms to make use of this box next.
- Improved reliability of saved options recovering on the Panel by using an isLoading check found in several models.
- Added a Percentage box to Moving Targets time. This relates directly to the other box (adjust one and it adjusts the other). Also when Fight Duration is updated, adjusts Move Time (seconds) by Move Time (%)
- Added BossHandler usage: Users can now use the Boss Selection drop-down to change their Situational stuff (Moving, Stunning, Multiple Targets) to presets based upon boss fights or use one of the Special Bosses.
- Swapped name list to use BetterBossNames (better for sorting)
- Fixed a bug with Stunning targets where if freq is set to 0, you will get a NaN error.
- Added Boss info box, updates using GenInfoString. TODO: Make it gen a new string based upon custom settings
- Updated the Instructions tab to relate to all the recent changes
- Added 11 items to the FAQ and updated the 4 that were there
- Updated the Version Notes tab to 2.2.15
- Fixed a bug where players with Trauma Talent that have not selected a MH weapon would get a NaN error

v2.2.14 (Aug 30, 2009 07:18)

- Fixed a couple of stat roundings
- Fix for issue 13873 "Target level does not affect yellow hit cap". Hit cap is now affected by target level in the Options Pane. This is reflected both in calculations and in the Hit can free/more hit needed tooltip.
- Added a Bounds Check to ensure character files created pre-v2.2.12 can be loaded into current version
- Modified CombatFactors to use the new StatConversion for target level adjustment handling
- Applied patch 3631 (T9 set bonuses)
- Applied patch to fix Warrior T9 set bonuses
- Fix for Issue 13901, Bloodrage no longer pulls GCDs
- Reworked the Tier Set bonuses (7,8,9). This fixes the Haste proc, and the double-dipping for the T9 bonuses created by last commit.
- Little bit of code reorganizing
- Changed the perc optimizer requirements to translate percentages
- Fixed Armor calculations, was not properly using the difference between Base Armor and Bonus Armor and their respective multipliers.
- Fixed MultiTargs Handling: It was double-dipping in some places and not being consistently handled. Now if you have MultiTargs checked but at 0% you will see same numbers as if it were unchecked and it scales up to 100% correctly.
- Added Max Targets to MultiTargs Handling: This places a limit on how much extra damage goes out for hitting additional targets, otherwise it will use max (up to 8).
- Updated Glyph bonuses for Battle and Commanding Shout to 3.2
- Added Glyph of Command as Relevant for DPSWarr, it affects the GCD usage of Comm Shout
- Fixed Commanding Shout's naming, etc and it now pulls GCDs properly when maintained
- Added Stun Handling (Arms Only). The Selector on the Options Panel is now active and can be used as a percentage of the fight while stunned (recommend using low numbers as very few fights have more than a couple of stuns over the entire fight).
- Added Iron Will Handling (Reduces number of GCDs lost to a stun)
- Added Second Wind Handling (Arms Only) (pops when getting Stunned)
- Added Every Man for Himself Handling (Humans Only) (Arms Only). Recovers GCDs lost to Stuns.
- Added Heroic Fury Handling (Talent Only) (Arms Only). Recovers GCDs lost to Stuns.
- Fixed Reloading of Saved options from the Options Panel, grouped function calls was causing it to set the first item or two, then an event would trigger and break the rest of the settings.
- SpecialEffect procs now include hasted white attacks, not just unhasted.
- Fixed a bug where swordspec was giving negative DPS if you weren't equipping a sword -- should have been 0 dps change.
- Did some more work on the Verbose Tooltip, cleaning it up and having it hide parts of the table that are 0.
- Changed the defaulting values in the Target Armor box
- Added more abilities to the Verbose Tooltip (Bloodsurge, Bloodthirst, Whirlwind, Thunder Clap, Shattering Throw)
- Removed Block from the Attack Table until proof can be shown of bosses in WotLK that block player's attacks
- Added more verification for Swordspec to ensure it's not affecting anything without a Sword equipped.
- Added Fall-through logic for Cleave and Heroic Strike. If MultiTargs is active and Cleave is not being maintained, you will Heroic Strike instead. There is currently not a half-way option yet.
- Fixed Overpower so it cannot be Blocked
- Fixed Targets display for Bladestorm
- Fixed Targets for Hamstring, Shattering Throw, Retaliation
- Turned off GCD Usage for Trinkets with Trigger.Use Effects
- Fixed handling for internal Blood Frenzy (Buff Blood Frenzy stays the same)
- Added White Attacks to the Verbose Tooltip method
- Added Combat Table class to DPSWarr: Migrated all attack table related calls to this new class, now handles Crit cap against Glancing and other similar extreme ratings levels
- Fixed a bug where Crits were getting an extra 100% damage
- Fixed a bug in the Rage formula for Unbridled Wrath
- Fixed a couple of abilities that had Crit on their attack table when they aren't capable of Critting
- Fixed a bug in Sudden Death and Overpower abilities activating when not being maintained
- Reworked the Activates for Overpower, no longer breaks on extremes
- Reworked Rend activates to handle Rend Ability not landing. If it's dodged, etc on the application, player must redo Rend to get it on the target as Rend needs 100% uptime for Taste for Blood. (This adds value to hit and expertise)
- Fixed several BuffEffects to operate on Attack Tables. If the debuff "misses" the ability is degraded. Will add reapplication checks (like Rend does now) later.
Note to DPSWarr Users: New testing in Arms shows an optimize for Max DPS without any requirements will now place you within a gem's reach of Hit and Expertise caps. I've seen it forgo 4 hit rating (from cap) in favor of 8 STR or ArP, same on Expertise. Higher Standing in Back increases the likelihood STR will override Exp. Whether this affects Fury the same way remains to be seen by Ebs.
- Now supports softcap with Grim Toll and Mjolnir Runestone (note: wearing BOTH trinkets is not yet supported).
- Performance improvements
- Reworked the tooltips for Hit and Expertise, you will now see better values and the differences in caps for 2h vs DW (hit) and Dodge vs Parry (Exp). Also takes better account for other bonuses towards the caps.
- Fixed Bonus Armor procs not providing AttT bonus. This allows handling for Indestructible Potion
- Attempt to correct issue with Options panel not showing same values as back end. Users may need to uncheck/recheck options in some cases to assert the values.
- Changed Allow Flooring Default to false.
- Possible fix for issue 13977. When some options, gear, etc are changed DPSWarr hangs. Added a loop counter to the OP/SD/SL/SS settler to stop it at 100 loop iterations if it hasn't already finished

v2.2.13 (Aug 12, 2009 02:28)

- Updated the Tooltips for Warrior Abilities
- Updated Talent and Glyph trees for 3.2
- Updated Base Stats for Warriors
- Reworked the Optimizer fields to a smaller set that is more functional and reads more to what they actually do
- Fixed a Tooltip issue with Armored to the Teeth
- Fixed a bug with new Agility Calc 

v2.2.12 (Aug 6, 2009 05:01)

- No notes for this release for DPSWarr, many changes occurred for other models and for the Base and data file caches to fully prepare for WoW Patch 3.2</value>
  </data>
  <data name="RTB_Welcome.Text" xml:space="preserve">
    <value>Welcome to Rawr.DPSWarr!

This module is designed for Warriors hoping to fulfill the DPS role in a raid, either as Fury or Arms Specialized.

To begin, assuming you have already imported your character from either Character Profiler or the WoW Armory, select your talent specialization above as either Fury or Arms if it did not do so automatically. If you would like to check your numbers against information from the next patch (at present, this is 3.2.2) you can check that item.

Next, jump over to the Fight Info Tab to set some background rules for the fight you want to measure against.
- Lag is the average Latency reported in your WoW client. Many with broadband connections usually see a value between 100 ms and 200 ms. Those with slower connection types such as dial-up will see much larger numbers.
- Reaction is the average amount of time it takes for you (the player) to react to a button that becomes available. For example, when an opponent dodges and the Overpower ability procs, how long does it take you to process this mentally and command your finger to push the hotkey for Overpower. The WoW client gives 250 ms (1/4 second) allowance for this before your reactions count against you. Most players fall under this 250 ms rule.
NOTE: Lag and Reaction are combined into a single calculable value. Small adjustments to these numbers yield *very* small adjustments in your DPS.
- The Boss Selector is a new method of using defined Presets for your 'Situational' settings. Selecting a specific boss will tailor the Duration, in back time, multiple targets etc to what is necessary for that fight. Please note that as this is a new method, many of the values for the presets still need to be fine-tuned.
- Target Level can be changed from 80 to 83. 83 is the numeric representation of all Raid Bosses (who show themselves as Level '??')
- Target Armor is currently defaulted to 10,643 for all Level 83 Bosses. This is the currently accepted rule of thumb and there is little reason to change off of this.
- Fight Duration is the length of the fight in seconds. A value of 600 is 10 minutes. Most boss fights take 6 minutes (value 360) or less but we left a high upper value for those wanting to see total damage for a greater period of time. The maximum for this box is 20 minutes, just above KT's Enrage Timer, which is a value of 1200.
- The Situational boxes provide the basic situation you will normally be fighting in. The default setting should be all disabled except 'Standing in Back' at 100%. See the Advanced Instructions (the next tab over from this one) for more info on these settings.

Finally, go to the Ability Maintenance Tab and choose the abilities you will be maintaining during your battles. Note that changing one or the other can have serious effects on your total DPS output, and some abilities act differently if you are in different situations. For example, Bladestorm will have a much larger DPS number if there are multiple targets throughout the fight.
NOTE: If you have Flooring active, turn it off unless you really want to see what it does. The methods behind it have not been refined and it is presently not as accurate as having it disabled.</value>
  </data>
  <data name="RTB_Advanced.Text" xml:space="preserve">
    <value>This section is for advanced users only, most players do not need to concern themselves with these settings.

Since you have gotten your feet wet, looked at your gear, maybe even run an optimization or two, now you must be hungry for more. Fear not, there's plenty more you can tweak with your character.

The Fight Info Tab

We will be adding functionality to maintain damage taken, for survivability and for the additional rage generated from damage taken at some point, but time takes time.

The Situational Boxes on The Fight Info Tab

This tab holds information regarding how often in a fight your toon is in that particular situation. Presently, there are five options with individual settings for each:
- Standing in Back: You spend at least x% of the fight standing behind the target. Mobs are unable to parry or block attacks from behind so the ~13% of attacks that could normally be parried are no longer on the table. If you are not standing behind the mob during for any portion of the fight, Expertise will have additional value due to it preventing Parries.
- Multiple Targets: Your encounter has additional mobs within melee striking distance for x% amount of time. This provides usefulness for abilities such as Cleave, Bladestorm, Whirlwind, Sweeping Strikes to start 'doing their thing' and allowing you to hit the additional targets for a greater overall DPS. Boss fights like Patchwerk however, do not have additional targets. There is a cap for the number of targets placed so that abilities such as Whirlwind do not go for 4 targets worth of damage when there are only 2 targets.
- Moving Targets: Your encounter has a target that moves out of melee striking distance for x% amount of time. This provides usefulness for abilities such as Charge and Intercept and talents which enable these abilities. This also provides effectiveness for Move Speed Enchants like Cat's Swiftness. A good example of this situation is 'Archavon the Stone Watcher' in the 'Vault of Archavon (VoA)'. [Currently this functionality is only active for Arms, not Fury, Charge, etc abilities are not yet modeled]
- Stunning Targets: Your encounter has a target that either stuns just yourself or your entire raid  x times over the fight duration for y milliseconds (1000 = 1 second). This provides usefulness for abilities such as Every man for Himself (Humans) and the talent Iron Will. You can change the values of both boxes by changing one of them. E.g.- Set Percentage to 25% and it will change the seconds box to match and vice-versa. [Currently this functionality is only active for Arms, not Fury]
- Disarming Targets: Your encounter has a target that disarms your characters' weapon periodically in combat. This provides usefulness for things like Titanium Weapon Chain and the talent Weapon Mastery. Most bosses do not do this, but there are several groups of trash (namely in Karazhan) that will disarm players. [Currently, this functionality has not been implemented, though it will be coming soon.]
Additional Situations to manage will be coming soon.

The Ability Maintenance Tab

Select additional abilities to watch how they affect your DPS. Thunder Clap applies a debuff to bosses as do Sunder Armor, Demoralizing Shout, Shattering Throw, etc.</value>
  </data>
  <data name="CK_Flooring.ToolTipText" xml:space="preserve">
    <value>Flooring changes the way Rotations are calculated. Normally, an ability can have 94.7 activates in a rotation, this allows a more smooth calc for things like Haste and Expertise (due to Overpower Procs). Flooring forces any partial activate off the table, 94.7 becomes 94. This is to better simulate reality, however it isn't fully factored in everywhere that it should be.\r\n\r\nUse Flooring at your own risk.</value>
  </data>
</root>